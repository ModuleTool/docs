classDiagram

class Expectation {
  - id
  - description
  - role: customer, manager
}

class Requirement {
  - id
  - description
}

class DataModel {
  - id
  - language: php, js, python
  - name: domain, url, host
  - type: file, class, function, url
  - format: json, html, yaml, text, string, integer, bool
}

class Documentation {
  - Expectation_id
  - Requirement_id
  - TestData_id
  - Description: string
}

class Component {
  - id
  - type: file, class, function, url
  - input: DataModel
  - output: DataModel
  - comments: string
  - license: string
  - autor: string
}

class TestData {
  - id
  - input_value: DataValue
  - output_value: DataValue
  - input_type: DataModel
  - output_type: DataModel
}

class DataValue {
  - id
  - type
  - value
  - format
}

class Environment {
  - id
  - type: local, remote, vm
  - configuration: docker, docker-compose
  - volume
  - service
  - Stage: prototype, local, test, production
}

class Deployment {
  - id
  - Component_id: Component
  - Environment_id: Environment
  - Documentation_id
  - Stage: prototype, local, test, production
}

class Logs {
  - id
  - Deployment_id
  - Message
}

Expectation "1" *-- "1" Documentation : has
Requirement "1" -- "many" Documentation : describes
TestData "1" -- "many" Documentation : contains
Component "1" .. "*" Deployment : deployed in
DataModel "1" .. "many" TestData : validated by
DataModel "1" -- "many" Component : defines input-output
DataValue "1" -- "many" TestData : used as
Environment "1" -- "many" Deployment : hosts
Documentation "1" -- "1" Deployment : documents
Deployment "1" -- "many" Logs : generates
